get_download_url() {
	local latest_url=http://www.goodsync.com/download/goodsync-release-x86_64.tar.gz
	echo ${latest_url}
}

install_tool() {
	local tool_install_dir=/var/tmp/goodsync
	mkdir -p ${tool_install_dir}
	[ ${tool_cmd} != "restore" ] && curl -L -o ${tool_path}/goodsync.tar.gz $(get_download_url)
	tar --strip-components=1 --no-same-owner -xvf ${tool_path}/goodsync.tar.gz -C ${tool_install_dir}
	install -o root -m 755 ${tool_install_dir}/gsync /usr/local/bin/gsync
	mkdir -p /var/log/goodsync
	rm -fr ${tool_install_dir}
}

update_tool() {
	if isupdate; then

		mv ${tool_path}/goodsync.tar.gz ${tool_path}/goodsync.tar.gz_
		mv ${tool_path}/${tool_name}.version ${tool_path}/${tool_name}.version_
		install_tool

		source /srv/conf.d/msmtp/mail_head
		local Subject="autoupdate: goodsync"
		local Body="

			autoupdate:

			goodsync
			at: $(date +"%c")

		"
		send_mail "${mail_To}" "${mail_From}" "${Subject}" "${Body}"

		true
	else
		false
	fi
}

restore_tool() {
	[ -f ${tool_path}/goodsync.tar.gz_ ] && {
		mv ${tool_path}/goodsync.tar.gz_ ${tool_path}/goodsync.tar.gz
		mv ${tool_path}/${tool_name}.version_ ${tool_path}/${tool_name}.version
		install_tool
	}
}

get_version() {
	if [ ${tool_cmd} == "restore" ];
	then
		cat ${tool_path}/${tool_name}.version
	else
		echo $(curl -sI -L $(get_download_url) | awk '/Content-Length/ { print $2 }' | tr -d '\r')
	fi
}
